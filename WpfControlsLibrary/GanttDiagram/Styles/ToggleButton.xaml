<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfControlsLibrary.GanttDiagram.Styles" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:ei="http://schemas.microsoft.com/xaml/behaviors" 
                    mc:Ignorable="d">

    <Style x:Key="ellipseShrinkStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Height" Value="7" />
        <Setter Property="Width" Value="7" />
        <Setter Property="StrokeThickness" Value="0.25"/>
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="Fill" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ShrinkToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid d:DesignWidth="35" d:DesignHeight="35">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Checked" GeneratedDuration="0:0:0.25" To="Unchecked">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse1">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse2">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse3">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse4">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse5">
                                                <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,10,1,1"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse1">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,10"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse2">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,10,1,1"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse3">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,10"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse4">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,10,1,1"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse5">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="1,1,1,10"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0" To="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>

                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="#FFD1D1D1" SnapsToDevicePixels="true" Padding="0"
                            CornerRadius="90" Opacity="0" />

                        <Grid Width="27" Height="27" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="ellipse" VerticalAlignment="Top" Style="{StaticResource ellipseShrinkStyle}" />
                            <Ellipse x:Name="ellipse6" Style="{StaticResource ellipseShrinkStyle}" />
                            <Ellipse x:Name="ellipse1" Style="{StaticResource ellipseShrinkStyle}" VerticalAlignment="Bottom" />

                            <Ellipse x:Name="ellipse2" Grid.Column="1" Style="{StaticResource ellipseShrinkStyle}" VerticalAlignment="Top" />
                            <Ellipse Grid.Column="1" Style="{StaticResource ellipseShrinkStyle}"/>
                            <Ellipse x:Name="ellipse3" Grid.Column="1" Style="{StaticResource ellipseShrinkStyle}" VerticalAlignment="Bottom" />

                            <Ellipse x:Name="ellipse4" Grid.Column="2" Style="{StaticResource ellipseShrinkStyle}" VerticalAlignment="Top" />
                            <Ellipse Grid.Column="2" Style="{StaticResource ellipseShrinkStyle}"/>
                            <Ellipse x:Name="ellipse5" Grid.Column="2" Style="{StaticResource ellipseShrinkStyle}" VerticalAlignment="Bottom" />
                        </Grid>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>