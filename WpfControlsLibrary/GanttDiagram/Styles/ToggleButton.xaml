<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfControlsLibrary.GanttDiagram.Styles" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Style x:Key="ellipseShrinkStyle" TargetType="Ellipse">
        <Setter Property="Height" Value="7" />
        <Setter Property="Width" Value="7" />
        <Setter Property="StrokeThickness" Value="0"/>
        <Setter Property="Fill" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ShrinkToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="Width" Value="29"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" d:DesignWidth="29" d:DesignHeight="29">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2,2,2,2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,13,2,2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse1">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,2,2,13"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse2">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,13,2,2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse3">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,2,2,13"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse4">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,13,2,2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse5">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.25" Value="2,2,2,13"/>
                                        </ThicknessAnimationUsingKeyFrames>                                        
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="ellipse" VerticalAlignment="Top" Style="{StaticResource ellipseShrinkStyle}" />
                            <Ellipse x:Name="ellipse6" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" Margin="1" HorizontalAlignment="Center"/>
                            <Ellipse x:Name="ellipse1" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" VerticalAlignment="Bottom" Margin="1" HorizontalAlignment="Center"/>

                            <Ellipse x:Name="ellipse2" Grid.Column="1" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Center"/>
                            <Ellipse Fill="#FFF4F4F5" Grid.Column="1" Height="7" Width="7" StrokeThickness="0" Margin="1" HorizontalAlignment="Center"/>
                            <Ellipse x:Name="ellipse3" Grid.Column="1" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" VerticalAlignment="Bottom" Margin="1" HorizontalAlignment="Center"/>

                            <Ellipse x:Name="ellipse4" Grid.Column="2" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Center"/>
                            <Ellipse Fill="#FFF4F4F5" Grid.Column="2" Height="7" Width="7" StrokeThickness="0" Margin="1" HorizontalAlignment="Center"/>
                            <Ellipse x:Name="ellipse5" Grid.Column="2" Fill="#FFF4F4F5" Height="7" Width="7" StrokeThickness="0" VerticalAlignment="Bottom" Margin="1" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>